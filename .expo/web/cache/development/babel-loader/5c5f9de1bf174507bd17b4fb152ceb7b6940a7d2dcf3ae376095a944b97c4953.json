{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _excluded = [\"messagesContainerStyle\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { createRef, useEffect, useMemo, useRef, useState, useCallback } from 'react';\nimport 'react-native-get-random-values';\nimport { ActionSheetProvider } from '@expo/react-native-action-sheet';\nimport dayjs from 'dayjs';\nimport localizedFormat from 'dayjs/plugin/localizedFormat';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { Actions } from \"./Actions\";\nimport { Avatar } from \"./Avatar\";\nimport Bubble from \"./Bubble\";\nimport { Composer } from \"./Composer\";\nimport { MAX_COMPOSER_HEIGHT, MIN_COMPOSER_HEIGHT, TEST_ID } from \"./Constant\";\nimport { Day } from \"./Day\";\nimport GiftedAvatar from \"./GiftedAvatar\";\nimport { GiftedChatContext } from \"./GiftedChatContext\";\nimport { InputToolbar } from \"./InputToolbar\";\nimport { LoadEarlier } from \"./LoadEarlier\";\nimport Message from \"./Message\";\nimport MessageContainer from \"./MessageContainer\";\nimport { MessageImage } from \"./MessageImage\";\nimport { MessageText } from \"./MessageText\";\nimport { Send } from \"./Send\";\nimport { SystemMessage } from \"./SystemMessage\";\nimport { Time } from \"./Time\";\nimport * as utils from \"./utils\";\nimport Animated, { useAnimatedKeyboard, useAnimatedStyle, useAnimatedReaction, useSharedValue, withTiming, runOnJS } from 'react-native-reanimated';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\ndayjs.extend(localizedFormat);\nfunction GiftedChat(props) {\n  var _props$messages = props.messages,\n    messages = _props$messages === void 0 ? [] : _props$messages,\n    _props$initialText = props.initialText,\n    initialText = _props$initialText === void 0 ? '' : _props$initialText,\n    isTyping = props.isTyping,\n    _props$messageIdGener = props.messageIdGenerator,\n    messageIdGenerator = _props$messageIdGener === void 0 ? function () {\n      return uuidv4();\n    } : _props$messageIdGener,\n    _props$user = props.user,\n    user = _props$user === void 0 ? {} : _props$user,\n    onSend = props.onSend,\n    _props$locale = props.locale,\n    locale = _props$locale === void 0 ? 'en' : _props$locale,\n    renderLoading = props.renderLoading,\n    _props$actionSheet = props.actionSheet,\n    actionSheet = _props$actionSheet === void 0 ? null : _props$actionSheet,\n    textInputProps = props.textInputProps,\n    _props$renderChatFoot = props.renderChatFooter,\n    renderChatFooter = _props$renderChatFoot === void 0 ? null : _props$renderChatFoot,\n    _props$renderInputToo = props.renderInputToolbar,\n    renderInputToolbar = _props$renderInputToo === void 0 ? null : _props$renderInputToo,\n    _props$keyboardShould = props.keyboardShouldPersistTaps,\n    keyboardShouldPersistTaps = _props$keyboardShould === void 0 ? Platform.select({\n      ios: 'never',\n      android: 'always',\n      default: 'never'\n    }) : _props$keyboardShould,\n    _props$onInputTextCha = props.onInputTextChanged,\n    onInputTextChanged = _props$onInputTextCha === void 0 ? null : _props$onInputTextCha,\n    _props$maxInputLength = props.maxInputLength,\n    maxInputLength = _props$maxInputLength === void 0 ? null : _props$maxInputLength,\n    _props$inverted = props.inverted,\n    inverted = _props$inverted === void 0 ? true : _props$inverted,\n    _props$minComposerHei = props.minComposerHeight,\n    minComposerHeight = _props$minComposerHei === void 0 ? MIN_COMPOSER_HEIGHT : _props$minComposerHei,\n    _props$maxComposerHei = props.maxComposerHeight,\n    maxComposerHeight = _props$maxComposerHei === void 0 ? MAX_COMPOSER_HEIGHT : _props$maxComposerHei;\n  var actionSheetRef = useRef(null);\n  var messageContainerRef = useMemo(function () {\n    return props.messageContainerRef || createRef();\n  }, [props.messageContainerRef]);\n  var textInputRef = useMemo(function () {\n    return props.textInputRef || createRef();\n  }, [props.textInputRef]);\n  var isTextInputWasFocused = useRef(false);\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isInitialized = _useState2[0],\n    setIsInitialized = _useState2[1];\n  var _useState3 = useState(minComposerHeight),\n    _useState4 = _slicedToArray(_useState3, 2),\n    composerHeight = _useState4[0],\n    setComposerHeight = _useState4[1];\n  var _useState5 = useState(function () {\n      return props.text || '';\n    }),\n    _useState6 = _slicedToArray(_useState5, 2),\n    text = _useState6[0],\n    setText = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isTypingDisabled = _useState8[0],\n    setIsTypingDisabled = _useState8[1];\n  var keyboard = useAnimatedKeyboard();\n  var trackingKeyboardMovement = useSharedValue(false);\n  var debounceEnableTypingTimeoutId = useRef();\n  var insets = useSafeAreaInsets();\n  var keyboardOffsetBottom = useSharedValue(0);\n  var contentStyleAnim = useAnimatedStyle(function () {\n    return {\n      transform: [{\n        translateY: -keyboard.height.value + keyboardOffsetBottom.value\n      }]\n    };\n  }, [keyboard, keyboardOffsetBottom]);\n  var getTextFromProp = useCallback(function (fallback) {\n    if (props.text === undefined) return fallback;\n    return props.text;\n  }, [props.text]);\n  var handleTextInputFocusWhenKeyboardHide = useCallback(function () {\n    var _textInputRef$current;\n    if (!isTextInputWasFocused.current) isTextInputWasFocused.current = ((_textInputRef$current = textInputRef.current) == null ? void 0 : _textInputRef$current.isFocused()) || false;\n  }, [textInputRef]);\n  var handleTextInputFocusWhenKeyboardShow = useCallback(function () {\n    if (textInputRef.current && isTextInputWasFocused && !textInputRef.current.isFocused()) textInputRef.current.focus();\n    isTextInputWasFocused.current = false;\n  }, [textInputRef]);\n  var disableTyping = useCallback(function () {\n    clearTimeout(debounceEnableTypingTimeoutId.current);\n    setIsTypingDisabled(true);\n  }, []);\n  var enableTyping = useCallback(function () {\n    clearTimeout(debounceEnableTypingTimeoutId.current);\n    setIsTypingDisabled(false);\n  }, []);\n  var debounceEnableTyping = useCallback(function () {\n    clearTimeout(debounceEnableTypingTimeoutId.current);\n    debounceEnableTypingTimeoutId.current = setTimeout(function () {\n      enableTyping();\n    }, 50);\n  }, [enableTyping]);\n  var scrollToBottom = useCallback(function () {\n    var isAnimated = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    if (!(messageContainerRef != null && messageContainerRef.current)) return;\n    if (inverted) {\n      messageContainerRef.current.scrollToOffset({\n        offset: 0,\n        animated: isAnimated\n      });\n      return;\n    }\n    messageContainerRef.current.scrollToEnd({\n      animated: isAnimated\n    });\n  }, [inverted, messageContainerRef]);\n  var renderMessages = useMemo(function () {\n    if (!isInitialized) return null;\n    var messagesContainerStyle = props.messagesContainerStyle,\n      messagesContainerProps = _objectWithoutProperties(props, _excluded);\n    var fragment = _jsxs(View, {\n      style: [styles.fill, messagesContainerStyle],\n      children: [_jsx(MessageContainer, _objectSpread(_objectSpread({}, messagesContainerProps), {}, {\n        invertibleScrollViewProps: {\n          inverted: inverted,\n          keyboardShouldPersistTaps: keyboardShouldPersistTaps\n        },\n        messages: messages,\n        forwardRef: messageContainerRef,\n        isTyping: isTyping\n      })), renderChatFooter == null ? void 0 : renderChatFooter()]\n    });\n    return fragment;\n  }, [isInitialized, isTyping, messages, props, inverted, keyboardShouldPersistTaps, messageContainerRef, renderChatFooter]);\n  var notifyInputTextReset = useCallback(function () {\n    onInputTextChanged == null ? void 0 : onInputTextChanged('');\n  }, [onInputTextChanged]);\n  var resetInputToolbar = useCallback(function () {\n    var _textInputRef$current2;\n    (_textInputRef$current2 = textInputRef.current) == null ? void 0 : _textInputRef$current2.clear();\n    notifyInputTextReset();\n    setComposerHeight(minComposerHeight);\n    setText(getTextFromProp(''));\n    enableTyping();\n  }, [minComposerHeight, getTextFromProp, textInputRef, notifyInputTextReset, enableTyping]);\n  var _onSend = useCallback(function () {\n    var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var shouldResetInputToolbar = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    if (!Array.isArray(messages)) messages = [messages];\n    var newMessages = messages.map(function (message) {\n      return _objectSpread(_objectSpread({}, message), {}, {\n        user: user,\n        createdAt: new Date(),\n        _id: messageIdGenerator == null ? void 0 : messageIdGenerator()\n      });\n    });\n    if (shouldResetInputToolbar === true) {\n      disableTyping();\n      resetInputToolbar();\n    }\n    onSend == null ? void 0 : onSend(newMessages);\n  }, [messageIdGenerator, onSend, user, resetInputToolbar, disableTyping]);\n  var onInputSizeChanged = useCallback(function (size) {\n    var newComposerHeight = Math.max(minComposerHeight, Math.min(maxComposerHeight, size.height));\n    setComposerHeight(newComposerHeight);\n  }, [maxComposerHeight, minComposerHeight]);\n  var _onInputTextChanged = useCallback(function (_text) {\n    if (isTypingDisabled) return;\n    onInputTextChanged == null ? void 0 : onInputTextChanged(_text);\n    if (props.text === undefined) setText(_text);\n  }, [onInputTextChanged, isTypingDisabled, props.text]);\n  var onInitialLayoutViewLayout = useCallback(function (e) {\n    var layout = e.nativeEvent.layout;\n    if (layout.height <= 0) return;\n    notifyInputTextReset();\n    setIsInitialized(true);\n    setComposerHeight(minComposerHeight);\n    setText(getTextFromProp(initialText));\n  }, [initialText, minComposerHeight, notifyInputTextReset, getTextFromProp]);\n  var inputToolbarFragment = useMemo(function () {\n    if (!isInitialized) return null;\n    var inputToolbarProps = _objectSpread(_objectSpread({}, props), {}, {\n      text: getTextFromProp(text),\n      composerHeight: Math.max(minComposerHeight, composerHeight),\n      onSend: _onSend,\n      onInputSizeChanged: onInputSizeChanged,\n      onTextChanged: _onInputTextChanged,\n      textInputProps: _objectSpread(_objectSpread({}, textInputProps), {}, {\n        ref: textInputRef,\n        maxLength: isTypingDisabled ? 0 : maxInputLength\n      })\n    });\n    if (renderInputToolbar) return renderInputToolbar(inputToolbarProps);\n    return _jsx(InputToolbar, _objectSpread({}, inputToolbarProps));\n  }, [isInitialized, _onSend, getTextFromProp, maxInputLength, minComposerHeight, onInputSizeChanged, props, text, renderInputToolbar, composerHeight, isTypingDisabled, textInputRef, textInputProps, _onInputTextChanged]);\n  var contextValues = useMemo(function () {\n    return {\n      actionSheet: actionSheet || function () {\n        return {\n          showActionSheetWithOptions: actionSheetRef.current.showActionSheetWithOptions\n        };\n      },\n      getLocale: function getLocale() {\n        return locale;\n      }\n    };\n  }, [actionSheet, locale]);\n  useEffect(function () {\n    if (props.text != null) setText(props.text);\n  }, [props.text]);\n  useEffect(function () {\n    if (!inverted && messages != null && messages.length) setTimeout(function () {\n      return scrollToBottom(false);\n    }, 200);\n  }, [messages == null ? void 0 : messages.length, inverted, scrollToBottom]);\n  useAnimatedReaction(function () {\n    return keyboard.height.value;\n  }, function (value, prevValue) {\n    if (prevValue && value !== prevValue) {\n      var isKeyboardMovingUp = value > prevValue;\n      if (isKeyboardMovingUp !== trackingKeyboardMovement.value) {\n        trackingKeyboardMovement.value = isKeyboardMovingUp;\n        keyboardOffsetBottom.value = withTiming(isKeyboardMovingUp ? insets.bottom : 0, {\n          duration: 400\n        });\n        if (isKeyboardMovingUp) runOnJS(handleTextInputFocusWhenKeyboardShow)();else runOnJS(handleTextInputFocusWhenKeyboardHide)();\n        if (value === 0) {\n          runOnJS(enableTyping)();\n        } else {\n          runOnJS(disableTyping)();\n          runOnJS(debounceEnableTyping)();\n        }\n      }\n    }\n  }, [keyboard, trackingKeyboardMovement, insets, handleTextInputFocusWhenKeyboardHide, handleTextInputFocusWhenKeyboardShow, enableTyping, disableTyping, debounceEnableTyping]);\n  return _jsx(GiftedChatContext.Provider, {\n    value: contextValues,\n    children: _jsx(ActionSheetProvider, {\n      ref: actionSheetRef,\n      children: _jsx(View, {\n        testID: TEST_ID.WRAPPER,\n        style: [styles.fill, styles.contentContainer],\n        onLayout: onInitialLayoutViewLayout,\n        children: isInitialized ? _jsxs(Animated.View, {\n          style: [styles.fill, contentStyleAnim],\n          children: [renderMessages, inputToolbarFragment]\n        }) : renderLoading == null ? void 0 : renderLoading()\n      })\n    })\n  });\n}\nGiftedChat.append = function () {\n  var currentMessages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var messages = arguments.length > 1 ? arguments[1] : undefined;\n  var inverted = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  if (!Array.isArray(messages)) messages = [messages];\n  return inverted ? messages.concat(currentMessages) : currentMessages.concat(messages);\n};\nGiftedChat.prepend = function () {\n  var currentMessages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var messages = arguments.length > 1 ? arguments[1] : undefined;\n  var inverted = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  if (!Array.isArray(messages)) messages = [messages];\n  return inverted ? currentMessages.concat(messages) : messages.concat(currentMessages);\n};\nvar styles = StyleSheet.create({\n  fill: {\n    flex: 1\n  },\n  contentContainer: {\n    overflow: 'hidden'\n  }\n});\nexport * from \"./Models\";\nexport { GiftedChat, Actions, Avatar, Bubble, SystemMessage, MessageImage, MessageText, Composer, Day, InputToolbar, LoadEarlier, Message, MessageContainer, Send, Time, GiftedAvatar, utils };","map":{"version":3,"names":["React","createRef","useEffect","useMemo","useRef","useState","useCallback","ActionSheetProvider","dayjs","localizedFormat","Platform","StyleSheet","View","v4","uuidv4","Actions","Avatar","Bubble","Composer","MAX_COMPOSER_HEIGHT","MIN_COMPOSER_HEIGHT","TEST_ID","Day","GiftedAvatar","GiftedChatContext","InputToolbar","LoadEarlier","Message","MessageContainer","MessageImage","MessageText","Send","SystemMessage","Time","utils","Animated","useAnimatedKeyboard","useAnimatedStyle","useAnimatedReaction","useSharedValue","withTiming","runOnJS","useSafeAreaInsets","jsx","_jsx","jsxs","_jsxs","extend","GiftedChat","props","_props$messages","messages","_props$initialText","initialText","isTyping","_props$messageIdGener","messageIdGenerator","_props$user","user","onSend","_props$locale","locale","renderLoading","_props$actionSheet","actionSheet","textInputProps","_props$renderChatFoot","renderChatFooter","_props$renderInputToo","renderInputToolbar","_props$keyboardShould","keyboardShouldPersistTaps","select","ios","android","default","_props$onInputTextCha","onInputTextChanged","_props$maxInputLength","maxInputLength","_props$inverted","inverted","_props$minComposerHei","minComposerHeight","_props$maxComposerHei","maxComposerHeight","actionSheetRef","messageContainerRef","textInputRef","isTextInputWasFocused","_useState","_useState2","_slicedToArray","isInitialized","setIsInitialized","_useState3","_useState4","composerHeight","setComposerHeight","_useState5","text","_useState6","setText","_useState7","_useState8","isTypingDisabled","setIsTypingDisabled","keyboard","trackingKeyboardMovement","debounceEnableTypingTimeoutId","insets","keyboardOffsetBottom","contentStyleAnim","transform","translateY","height","value","getTextFromProp","fallback","undefined","handleTextInputFocusWhenKeyboardHide","_textInputRef$current","current","isFocused","handleTextInputFocusWhenKeyboardShow","focus","disableTyping","clearTimeout","enableTyping","debounceEnableTyping","setTimeout","scrollToBottom","isAnimated","arguments","length","scrollToOffset","offset","animated","scrollToEnd","renderMessages","messagesContainerStyle","messagesContainerProps","_objectWithoutProperties","_excluded","fragment","style","styles","fill","children","_objectSpread","invertibleScrollViewProps","forwardRef","notifyInputTextReset","resetInputToolbar","_textInputRef$current2","clear","_onSend","shouldResetInputToolbar","Array","isArray","newMessages","map","message","createdAt","Date","_id","onInputSizeChanged","size","newComposerHeight","Math","max","min","_onInputTextChanged","_text","onInitialLayoutViewLayout","e","layout","nativeEvent","inputToolbarFragment","inputToolbarProps","onTextChanged","ref","maxLength","contextValues","showActionSheetWithOptions","getLocale","prevValue","isKeyboardMovingUp","bottom","duration","Provider","testID","WRAPPER","contentContainer","onLayout","append","currentMessages","concat","prepend","create","flex","overflow"],"sources":["C:\\Users\\nicky\\Desktop\\Aplicaciones Móviles I\\ChatApp\\node_modules\\react-native-gifted-chat\\src\\GiftedChat.tsx"],"sourcesContent":["import React, {\n  createRef,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  useCallback,\n  MutableRefObject,\n} from 'react'\nimport 'react-native-get-random-values' // NOTE: FOR \"uuid\" SUPPORT\nimport {\n  ActionSheetOptions,\n  ActionSheetProvider,\n  ActionSheetProviderRef,\n} from '@expo/react-native-action-sheet'\nimport dayjs from 'dayjs'\nimport localizedFormat from 'dayjs/plugin/localizedFormat'\nimport {\n  FlatList,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  TextInput,\n  TextStyle,\n  View,\n  ViewStyle,\n  LayoutChangeEvent,\n} from 'react-native'\nimport { LightboxProps } from 'react-native-lightbox-v2'\nimport { v4 as uuidv4 } from 'uuid'\nimport { Actions, ActionsProps } from './Actions'\nimport { Avatar, AvatarProps } from './Avatar'\nimport Bubble from './Bubble'\nimport { Composer, ComposerProps } from './Composer'\nimport { MAX_COMPOSER_HEIGHT, MIN_COMPOSER_HEIGHT, TEST_ID } from './Constant'\nimport { Day, DayProps } from './Day'\nimport GiftedAvatar from './GiftedAvatar'\nimport { GiftedChatContext } from './GiftedChatContext'\nimport { InputToolbar, InputToolbarProps } from './InputToolbar'\nimport { LoadEarlier, LoadEarlierProps } from './LoadEarlier'\nimport Message from './Message'\nimport MessageContainer from './MessageContainer'\nimport { MessageImage, MessageImageProps } from './MessageImage'\nimport { MessageText, MessageTextProps } from './MessageText'\nimport {\n  IMessage,\n  LeftRightStyle,\n  MessageAudioProps,\n  MessageVideoProps,\n  Reply,\n  User,\n} from './Models'\nimport { QuickRepliesProps } from './QuickReplies'\nimport { Send, SendProps } from './Send'\nimport { SystemMessage, SystemMessageProps } from './SystemMessage'\nimport { Time, TimeProps } from './Time'\nimport * as utils from './utils'\nimport Animated, {\n  useAnimatedKeyboard,\n  useAnimatedStyle,\n  useAnimatedReaction,\n  useSharedValue,\n  withTiming,\n  runOnJS,\n} from 'react-native-reanimated'\nimport { useSafeAreaInsets } from 'react-native-safe-area-context'\n\ndayjs.extend(localizedFormat)\n\nexport interface GiftedChatProps<TMessage extends IMessage = IMessage> {\n  /* Message container ref */\n  messageContainerRef?: React.RefObject<FlatList<IMessage>>\n  /* text input ref */\n  textInputRef?: React.RefObject<TextInput>\n  /* Messages to display */\n  messages?: TMessage[]\n  /* Typing Indicator state */\n  isTyping?: boolean\n  /* Messages container style */\n  messagesContainerStyle?: StyleProp<ViewStyle>\n  /* Input text; default is undefined, but if specified, it will override GiftedChat's internal state */\n  text?: string\n  /* Controls whether or not the message bubbles appear at the top of the chat */\n  alignTop?: boolean\n  /* enables the scrollToBottom Component */\n  scrollToBottom?: boolean\n  /* Scroll to bottom wrapper style */\n  scrollToBottomStyle?: StyleProp<ViewStyle>\n  initialText?: string\n  /* Placeholder when text is empty; default is 'Type a message...' */\n  placeholder?: string\n  /* Makes the composer not editable */\n  disableComposer?: boolean\n  /* User sending the messages: { _id, name, avatar } */\n  user?: User\n  /*  Locale to localize the dates */\n  locale?: string\n  /* Format to use for rendering times; default is 'LT' */\n  timeFormat?: string\n  /* Format to use for rendering dates; default is 'll' */\n  dateFormat?: string\n  /* Enables the \"Load earlier messages\" button */\n  loadEarlier?: boolean\n  /* Display an ActivityIndicator when loading earlier messages */\n  isLoadingEarlier?: boolean\n  /* Whether to render an avatar for the current user; default is false, only show avatars for other users */\n  showUserAvatar?: boolean\n  /* When false, avatars will only be displayed when a consecutive message is from the same user on the same day; default is false */\n  showAvatarForEveryMessage?: boolean\n  /* Render the message avatar at the top of consecutive messages, rather than the bottom; default is false */\n  renderAvatarOnTop?: boolean\n  inverted?: boolean\n  /* Extra props to be passed to the <Image> component created by the default renderMessageImage */\n  imageProps?: Message<TMessage>['props']\n  /* Extra props to be passed to the MessageImage's Lightbox */\n  lightboxProps?: LightboxProps\n  /* Minimum height of the input toolbar; default is 44 */\n  minInputToolbarHeight?: number\n  /* Extra props to be passed to the messages <ListView>; some props can't be overridden, see the code in MessageContainer.render() for details */\n  listViewProps?: object\n  /*  Extra props to be passed to the <TextInput> */\n  textInputProps?: object\n  /* Determines whether the keyboard should stay visible after a tap; see <ScrollView> docs */\n  keyboardShouldPersistTaps?: boolean\n  /* Max message composer TextInput length */\n  maxInputLength?: number\n  /* Force send button */\n  alwaysShowSend?: boolean\n  /* Image style */\n  imageStyle?: StyleProp<ViewStyle>\n  /* This can be used to pass unknown data which needs to be re-rendered */\n  extraData?: object\n  /* composer min Height */\n  minComposerHeight?: number\n  /* composer min Height */\n  maxComposerHeight?: number\n  options?: { [key: string]: () => void }\n  optionTintColor?: string\n  quickReplyStyle?: StyleProp<ViewStyle>\n  quickReplyTextStyle?: StyleProp<TextStyle>\n  quickReplyContainerStyle?: StyleProp<ViewStyle>\n  /* optional prop used to place customView below text, image and video views; default is false */\n  isCustomViewBottom?: boolean\n  /* infinite scroll up when reach the top of messages container, automatically call onLoadEarlier function if exist */\n  infiniteScroll?: boolean\n  timeTextStyle?: LeftRightStyle<TextStyle>\n  /* Custom action sheet */\n  actionSheet?(): {\n    showActionSheetWithOptions: (\n      options: ActionSheetOptions,\n      callback: (buttonIndex: number) => void | Promise<void>,\n    ) => void\n  }\n  /* Callback when a message avatar is tapped */\n  onPressAvatar?(user: User): void\n  /* Callback when a message avatar is tapped */\n  onLongPressAvatar?(user: User): void\n  /* Generate an id for new messages. Defaults to UUID v4, generated by uuid */\n  messageIdGenerator?(message?: TMessage): string\n  /* Callback when sending a message */\n  onSend?(messages: TMessage[]): void\n  /* Callback when loading earlier messages */\n  onLoadEarlier?(): void\n  /*  Render a loading view when initializing */\n  renderLoading?(): React.ReactNode\n  /* Custom \"Load earlier messages\" button */\n  renderLoadEarlier?(props: LoadEarlierProps): React.ReactNode\n  /* Custom message avatar; set to null to not render any avatar for the message */\n  renderAvatar?: null | ((props: AvatarProps<TMessage>) => React.ReactNode)\n  /* Custom message bubble */\n  renderBubble?(props: Bubble<TMessage>['props']): React.ReactNode\n  /* Custom system message */\n  renderSystemMessage?(props: SystemMessageProps<TMessage>): React.ReactNode\n  /* Callback when a message bubble is pressed; default is to do nothing */\n  onPress?(context: unknown, message: TMessage): void\n  /* Callback when a message bubble is long-pressed; default is to show an ActionSheet with \"Copy Text\" (see example using showActionSheetWithOptions()) */\n  onLongPress?(context: unknown, message: TMessage): void\n  /* Custom Username container */\n  renderUsername?(user: User): React.ReactNode\n  /* Reverses display order of messages; default is true */\n  /* Custom message container */\n  renderMessage?(message: Message<TMessage>['props']): React.ReactElement\n  /* Custom message text */\n  renderMessageText?(messageText: MessageTextProps<TMessage>): React.ReactNode\n  /* Custom message image */\n  renderMessageImage?(props: MessageImageProps<TMessage>): React.ReactNode\n  /* Custom message video */\n  renderMessageVideo?(props: MessageVideoProps<TMessage>): React.ReactNode\n  /* Custom message video */\n  renderMessageAudio?(props: MessageAudioProps<TMessage>): React.ReactNode\n  /* Custom view inside the bubble */\n  renderCustomView?(props: Bubble<TMessage>['props']): React.ReactNode\n  /* Custom day above a message */\n  renderDay?(props: DayProps<TMessage>): React.ReactNode\n  /* Custom time inside a message */\n  renderTime?(props: TimeProps<TMessage>): React.ReactNode\n  /* Custom footer component on the ListView, e.g. 'User is typing...' */\n  renderFooter?(): React.ReactNode\n  /* Custom component to render in the ListView when messages are empty */\n  renderChatEmpty?(): React.ReactNode\n  /* Custom component to render below the MessageContainer (separate from the ListView) */\n  renderChatFooter?(): React.ReactNode\n  /* Custom message composer container */\n  renderInputToolbar?(props: InputToolbarProps<TMessage>): React.ReactNode\n  /*  Custom text input message composer */\n  renderComposer?(props: ComposerProps): React.ReactNode\n  /* Custom action button on the left of the message composer */\n  renderActions?(props: ActionsProps): React.ReactNode\n  /* Custom send button; you can pass children to the original Send component quite easily, for example to use a custom icon (example) */\n  renderSend?(props: SendProps<TMessage>): React.ReactNode\n  /* Custom second line of actions below the message composer */\n  renderAccessory?(props: InputToolbarProps<TMessage>): React.ReactNode\n  /* Callback when the Action button is pressed (if set, the default actionSheet will not be used) */\n  onPressActionButton?(): void\n  /* Callback when the input text changes */\n  onInputTextChanged?(text: string): void\n  /* Custom parse patterns for react-native-parsed-text used to linking message content (like URLs and phone numbers) */\n  parsePatterns?: (linkStyle: TextStyle) => []\n  onQuickReply?(replies: Reply[]): void\n  renderQuickReplies?(\n    quickReplies: QuickRepliesProps<TMessage>,\n  ): React.ReactNode\n  renderQuickReplySend?(): React.ReactNode\n  /* Scroll to bottom custom component */\n  scrollToBottomComponent?(): React.ReactNode\n  shouldUpdateMessage?(\n    props: Message<TMessage>['props'],\n    nextProps: Message<TMessage>['props'],\n  ): boolean\n}\n\nfunction GiftedChat<TMessage extends IMessage = IMessage> (\n  props: GiftedChatProps\n) {\n  const {\n    messages = [],\n    initialText = '',\n    isTyping,\n    messageIdGenerator = () => uuidv4(),\n    user = {},\n    onSend,\n    locale = 'en',\n    renderLoading,\n    actionSheet = null,\n    textInputProps,\n    renderChatFooter = null,\n    renderInputToolbar = null,\n    keyboardShouldPersistTaps = Platform.select({\n      ios: 'never',\n      android: 'always',\n      default: 'never',\n    }),\n    onInputTextChanged = null,\n    maxInputLength = null,\n    inverted = true,\n    minComposerHeight = MIN_COMPOSER_HEIGHT,\n    maxComposerHeight = MAX_COMPOSER_HEIGHT,\n  } = props\n\n  const actionSheetRef = useRef<ActionSheetProviderRef>(null)\n\n  const messageContainerRef = useMemo(\n    () => props.messageContainerRef || createRef<FlatList<IMessage>>(),\n    [props.messageContainerRef]\n  )\n\n  const textInputRef = useMemo(\n    () => props.textInputRef || createRef<TextInput>(),\n    [props.textInputRef]\n  )\n\n  const isTextInputWasFocused: MutableRefObject<boolean> = useRef(false)\n\n  const [isInitialized, setIsInitialized] = useState<boolean>(false)\n  const [composerHeight, setComposerHeight] = useState<number>(\n    minComposerHeight!\n  )\n  const [text, setText] = useState<string | undefined>(() => props.text || '')\n  const [isTypingDisabled, setIsTypingDisabled] = useState<boolean>(false)\n\n  const keyboard = useAnimatedKeyboard()\n  const trackingKeyboardMovement = useSharedValue(false)\n  const debounceEnableTypingTimeoutId = useRef<ReturnType<typeof setTimeout>>()\n  const insets = useSafeAreaInsets()\n  const keyboardOffsetBottom = useSharedValue(0)\n\n  const contentStyleAnim = useAnimatedStyle(\n    () => ({\n      transform: [\n        { translateY: -keyboard.height.value + keyboardOffsetBottom.value },\n      ],\n    }),\n    [keyboard, keyboardOffsetBottom]\n  )\n\n  const getTextFromProp = useCallback(\n    (fallback: string) => {\n      if (props.text === undefined)\n        return fallback\n\n      return props.text\n    },\n    [props.text]\n  )\n\n  /**\n   * Store text input focus status when keyboard hide to retrieve\n   * it afterwards if needed.\n   * `onKeyboardWillHide` may be called twice in sequence so we\n   * make a guard condition (eg. showing image picker)\n   */\n  const handleTextInputFocusWhenKeyboardHide = useCallback(() => {\n    if (!isTextInputWasFocused.current)\n      isTextInputWasFocused.current =\n        textInputRef.current?.isFocused() || false\n  }, [textInputRef])\n\n  /**\n   * Refocus the text input only if it was focused before showing keyboard.\n   * This is needed in some cases (eg. showing image picker).\n   */\n  const handleTextInputFocusWhenKeyboardShow = useCallback(() => {\n    if (\n      textInputRef.current &&\n      isTextInputWasFocused &&\n      !textInputRef.current.isFocused()\n    )\n      textInputRef.current.focus()\n\n    // Reset the indicator since the keyboard is shown\n    isTextInputWasFocused.current = false\n  }, [textInputRef])\n\n  const disableTyping = useCallback(() => {\n    clearTimeout(debounceEnableTypingTimeoutId.current)\n    setIsTypingDisabled(true)\n  }, [])\n\n  const enableTyping = useCallback(() => {\n    clearTimeout(debounceEnableTypingTimeoutId.current)\n    setIsTypingDisabled(false)\n  }, [])\n\n  const debounceEnableTyping = useCallback(() => {\n    clearTimeout(debounceEnableTypingTimeoutId.current)\n    debounceEnableTypingTimeoutId.current = setTimeout(() => {\n      enableTyping()\n    }, 50)\n  }, [enableTyping])\n\n  const scrollToBottom = useCallback(\n    (isAnimated = true) => {\n      if (!messageContainerRef?.current)\n        return\n\n      if (inverted) {\n        messageContainerRef.current.scrollToOffset({\n          offset: 0,\n          animated: isAnimated,\n        })\n        return\n      }\n\n      messageContainerRef.current.scrollToEnd({ animated: isAnimated })\n    },\n    [inverted, messageContainerRef]\n  )\n\n  const renderMessages = useMemo(() => {\n    if (!isInitialized)\n      return null\n\n    const { messagesContainerStyle, ...messagesContainerProps } = props\n\n    const fragment = (\n      <View style={[styles.fill, messagesContainerStyle]}>\n        <MessageContainer\n          {...messagesContainerProps}\n          invertibleScrollViewProps={{\n            inverted,\n            keyboardShouldPersistTaps,\n          }}\n          messages={messages}\n          forwardRef={messageContainerRef}\n          isTyping={isTyping}\n        />\n        {renderChatFooter?.()}\n      </View>\n    )\n\n    return fragment\n  }, [\n    isInitialized,\n    isTyping,\n    messages,\n    props,\n    inverted,\n    keyboardShouldPersistTaps,\n    messageContainerRef,\n    renderChatFooter,\n  ])\n\n  const notifyInputTextReset = useCallback(() => {\n    onInputTextChanged?.('')\n  }, [onInputTextChanged])\n\n  const resetInputToolbar = useCallback(() => {\n    textInputRef.current?.clear()\n\n    notifyInputTextReset()\n\n    setComposerHeight(minComposerHeight!)\n    setText(getTextFromProp(''))\n    enableTyping()\n  }, [\n    minComposerHeight,\n    getTextFromProp,\n    textInputRef,\n    notifyInputTextReset,\n    enableTyping,\n  ])\n\n  const _onSend = useCallback(\n    (messages: TMessage[] = [], shouldResetInputToolbar = false) => {\n      if (!Array.isArray(messages))\n        messages = [messages]\n\n      const newMessages: TMessage[] = messages.map(message => {\n        return {\n          ...message,\n          user: user!,\n          createdAt: new Date(),\n          _id: messageIdGenerator?.(),\n        }\n      })\n\n      if (shouldResetInputToolbar === true) {\n        disableTyping()\n\n        resetInputToolbar()\n      }\n\n      onSend?.(newMessages)\n    },\n    [messageIdGenerator, onSend, user, resetInputToolbar, disableTyping]\n  )\n\n  const onInputSizeChanged = useCallback(\n    (size: { height: number }) => {\n      const newComposerHeight = Math.max(\n        minComposerHeight!,\n        Math.min(maxComposerHeight!, size.height)\n      )\n\n      setComposerHeight(newComposerHeight)\n    },\n    [maxComposerHeight, minComposerHeight]\n  )\n\n  const _onInputTextChanged = useCallback(\n    (_text: string) => {\n      if (isTypingDisabled)\n        return\n\n      onInputTextChanged?.(_text)\n\n      // Only set state if it's not being overridden by a prop.\n      if (props.text === undefined)\n        setText(_text)\n    },\n    [onInputTextChanged, isTypingDisabled, props.text]\n  )\n\n  const onInitialLayoutViewLayout = useCallback(\n    (e: LayoutChangeEvent) => {\n      const { layout } = e.nativeEvent\n\n      if (layout.height <= 0)\n        return\n\n      notifyInputTextReset()\n\n      setIsInitialized(true)\n      setComposerHeight(minComposerHeight!)\n      setText(getTextFromProp(initialText))\n    },\n    [initialText, minComposerHeight, notifyInputTextReset, getTextFromProp]\n  )\n\n  const inputToolbarFragment = useMemo(() => {\n    if (!isInitialized)\n      return null\n\n    const inputToolbarProps = {\n      ...props,\n      text: getTextFromProp(text!),\n      composerHeight: Math.max(minComposerHeight!, composerHeight),\n      onSend: _onSend,\n      onInputSizeChanged,\n      onTextChanged: _onInputTextChanged,\n      textInputProps: {\n        ...textInputProps,\n        ref: textInputRef,\n        maxLength: isTypingDisabled ? 0 : maxInputLength,\n      },\n    }\n\n    if (renderInputToolbar)\n      return renderInputToolbar(inputToolbarProps)\n\n    return <InputToolbar {...inputToolbarProps} />\n  }, [\n    isInitialized,\n    _onSend,\n    getTextFromProp,\n    maxInputLength,\n    minComposerHeight,\n    onInputSizeChanged,\n    props,\n    text,\n    renderInputToolbar,\n    composerHeight,\n    isTypingDisabled,\n    textInputRef,\n    textInputProps,\n    _onInputTextChanged,\n  ])\n\n  const contextValues = useMemo(\n    () => ({\n      actionSheet:\n        actionSheet ||\n        (() => ({\n          showActionSheetWithOptions:\n            actionSheetRef.current!.showActionSheetWithOptions,\n        })),\n      getLocale: () => locale,\n    }),\n    [actionSheet, locale]\n  )\n\n  useEffect(() => {\n    if (props.text != null)\n      setText(props.text)\n  }, [props.text])\n\n  useEffect(() => {\n    if (!inverted && messages?.length)\n      setTimeout(() => scrollToBottom(false), 200)\n  }, [messages?.length, inverted, scrollToBottom])\n\n  useAnimatedReaction(\n    () => keyboard.height.value,\n    (value, prevValue) => {\n      if (prevValue && value !== prevValue) {\n        const isKeyboardMovingUp = value > prevValue\n        if (isKeyboardMovingUp !== trackingKeyboardMovement.value) {\n          trackingKeyboardMovement.value = isKeyboardMovingUp\n          keyboardOffsetBottom.value = withTiming(\n            isKeyboardMovingUp ? insets.bottom : 0,\n            {\n              duration: 400,\n            }\n          )\n\n          if (isKeyboardMovingUp)\n            runOnJS(handleTextInputFocusWhenKeyboardShow)()\n          else\n            runOnJS(handleTextInputFocusWhenKeyboardHide)()\n\n          if (value === 0) {\n            runOnJS(enableTyping)()\n          } else {\n            runOnJS(disableTyping)()\n            runOnJS(debounceEnableTyping)()\n          }\n        }\n      }\n    },\n    [\n      keyboard,\n      trackingKeyboardMovement,\n      insets,\n      handleTextInputFocusWhenKeyboardHide,\n      handleTextInputFocusWhenKeyboardShow,\n      enableTyping,\n      disableTyping,\n      debounceEnableTyping,\n    ]\n  )\n\n  return (\n    <GiftedChatContext.Provider value={contextValues}>\n      <ActionSheetProvider ref={actionSheetRef}>\n        <View\n          testID={TEST_ID.WRAPPER}\n          style={[styles.fill, styles.contentContainer]}\n          onLayout={onInitialLayoutViewLayout}\n        >\n          {isInitialized\n            ? (\n              <Animated.View style={[styles.fill, contentStyleAnim]}>\n                {renderMessages}\n                {inputToolbarFragment}\n              </Animated.View>\n            )\n            : (\n              renderLoading?.()\n            )}\n        </View>\n      </ActionSheetProvider>\n    </GiftedChatContext.Provider>\n  )\n}\n\nGiftedChat.append = <TMessage extends IMessage>(\n  currentMessages: TMessage[] = [],\n  messages: TMessage[],\n  inverted = true\n) => {\n  if (!Array.isArray(messages))\n    messages = [messages]\n\n  return inverted\n    ? messages.concat(currentMessages)\n    : currentMessages.concat(messages)\n}\n\nGiftedChat.prepend = <TMessage extends IMessage>(\n  currentMessages: TMessage[] = [],\n  messages: TMessage[],\n  inverted = true\n) => {\n  if (!Array.isArray(messages))\n    messages = [messages]\n\n  return inverted\n    ? currentMessages.concat(messages)\n    : messages.concat(currentMessages)\n}\n\nconst styles = StyleSheet.create({\n  fill: {\n    flex: 1,\n  },\n  contentContainer: {\n    overflow: 'hidden',\n  },\n})\n\nexport * from './Models'\nexport {\n  GiftedChat,\n  Actions,\n  Avatar,\n  Bubble,\n  SystemMessage,\n  MessageImage,\n  MessageText,\n  Composer,\n  Day,\n  InputToolbar,\n  LoadEarlier,\n  Message,\n  MessageContainer,\n  Send,\n  Time,\n  GiftedAvatar,\n  utils\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}