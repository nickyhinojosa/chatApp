{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport PropTypes from 'prop-types';\nimport React, { useMemo } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Composer } from \"./Composer\";\nimport { Send } from \"./Send\";\nimport { Actions } from \"./Actions\";\nimport Color from \"./Color\";\nimport { StylePropType } from \"./utils\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function InputToolbar(props) {\n  var renderActions = props.renderActions,\n    onPressActionButton = props.onPressActionButton,\n    renderComposer = props.renderComposer,\n    renderSend = props.renderSend,\n    renderAccessory = props.renderAccessory,\n    options = props.options,\n    optionTintColor = props.optionTintColor,\n    icon = props.icon,\n    wrapperStyle = props.wrapperStyle,\n    containerStyle = props.containerStyle;\n  var actionsFragment = useMemo(function () {\n    var props = {\n      options: options,\n      optionTintColor: optionTintColor,\n      icon: icon,\n      wrapperStyle: wrapperStyle,\n      containerStyle: containerStyle\n    };\n    return (renderActions == null ? void 0 : renderActions(props)) || onPressActionButton && _jsx(Actions, _objectSpread({}, props));\n  }, [renderActions, onPressActionButton, options, optionTintColor, icon, wrapperStyle, containerStyle]);\n  var composerFragment = useMemo(function () {\n    return (renderComposer == null ? void 0 : renderComposer(props)) || _jsx(Composer, _objectSpread({}, props));\n  }, [renderComposer, props]);\n  return _jsxs(View, {\n    style: [styles.container, containerStyle],\n    children: [_jsxs(View, {\n      style: [styles.primary, props.primaryStyle],\n      children: [actionsFragment, composerFragment, (renderSend == null ? void 0 : renderSend(props)) || _jsx(Send, _objectSpread({}, props))]\n    }), renderAccessory && _jsx(View, {\n      style: [styles.accessory, props.accessoryStyle],\n      children: renderAccessory(props)\n    })]\n  });\n}\nInputToolbar.propTypes = {\n  renderAccessory: PropTypes.func,\n  renderActions: PropTypes.func,\n  renderSend: PropTypes.func,\n  renderComposer: PropTypes.func,\n  onPressActionButton: PropTypes.func,\n  containerStyle: StylePropType,\n  primaryStyle: StylePropType,\n  accessoryStyle: StylePropType\n};\nvar styles = StyleSheet.create({\n  container: {\n    borderTopWidth: StyleSheet.hairlineWidth,\n    borderTopColor: Color.defaultColor,\n    backgroundColor: Color.white\n  },\n  primary: {\n    flexDirection: 'row',\n    alignItems: 'flex-end'\n  },\n  accessory: {\n    height: 44\n  }\n});","map":{"version":3,"names":["PropTypes","React","useMemo","StyleSheet","View","Composer","Send","Actions","Color","StylePropType","jsx","_jsx","jsxs","_jsxs","InputToolbar","props","renderActions","onPressActionButton","renderComposer","renderSend","renderAccessory","options","optionTintColor","icon","wrapperStyle","containerStyle","actionsFragment","_objectSpread","composerFragment","style","styles","container","children","primary","primaryStyle","accessory","accessoryStyle","propTypes","func","create","borderTopWidth","hairlineWidth","borderTopColor","defaultColor","backgroundColor","white","flexDirection","alignItems","height"],"sources":["C:\\Users\\nicky\\Desktop\\Aplicaciones MÃ³viles I\\ChatApp\\node_modules\\react-native-gifted-chat\\src\\InputToolbar.tsx"],"sourcesContent":["import PropTypes from 'prop-types'\nimport React, { useMemo } from 'react'\nimport { StyleSheet, View, StyleProp, ViewStyle } from 'react-native'\n\nimport { Composer, ComposerProps } from './Composer'\nimport { Send, SendProps } from './Send'\nimport { Actions, ActionsProps } from './Actions'\nimport Color from './Color'\nimport { StylePropType } from './utils'\nimport { IMessage } from './Models'\n\nexport interface InputToolbarProps<TMessage extends IMessage> {\n  options?: { [key: string]: () => void }\n  optionTintColor?: string\n  containerStyle?: StyleProp<ViewStyle>\n  primaryStyle?: StyleProp<ViewStyle>\n  accessoryStyle?: StyleProp<ViewStyle>\n  renderAccessory?(props: InputToolbarProps<TMessage>): React.ReactNode\n  renderActions?(props: ActionsProps): React.ReactNode\n  renderSend?(props: SendProps<TMessage>): React.ReactNode\n  renderComposer?(props: ComposerProps): React.ReactNode\n  onPressActionButton?(): void\n  icon?: () => React.ReactNode\n  wrapperStyle?: StyleProp<ViewStyle>\n}\n\nexport function InputToolbar<TMessage extends IMessage = IMessage> (\n  props: InputToolbarProps<TMessage>\n) {\n  const {\n    renderActions,\n    onPressActionButton,\n    renderComposer,\n    renderSend,\n    renderAccessory,\n    options,\n    optionTintColor,\n    icon,\n    wrapperStyle,\n    containerStyle,\n  } = props\n\n  const actionsFragment = useMemo(() => {\n    const props = {\n      options,\n      optionTintColor,\n      icon,\n      wrapperStyle,\n      containerStyle,\n    }\n\n    return (\n      renderActions?.(props) || (onPressActionButton && <Actions {...props} />)\n    )\n  }, [\n    renderActions,\n    onPressActionButton,\n    options,\n    optionTintColor,\n    icon,\n    wrapperStyle,\n    containerStyle,\n  ])\n\n  const composerFragment = useMemo(() => {\n    return (\n      renderComposer?.(props as ComposerProps) || (\n        <Composer {...(props as ComposerProps)} />\n      )\n    )\n  }, [renderComposer, props])\n\n  return (\n    <View style={[styles.container, containerStyle]}>\n      <View style={[styles.primary, props.primaryStyle]}>\n        {actionsFragment}\n        {composerFragment}\n        {renderSend?.(props) || <Send {...props} />}\n      </View>\n      {renderAccessory && (\n        <View style={[styles.accessory, props.accessoryStyle]}>\n          {renderAccessory(props)}\n        </View>\n      )}\n    </View>\n  )\n}\n\nInputToolbar.propTypes = {\n  renderAccessory: PropTypes.func,\n  renderActions: PropTypes.func,\n  renderSend: PropTypes.func,\n  renderComposer: PropTypes.func,\n  onPressActionButton: PropTypes.func,\n  containerStyle: StylePropType,\n  primaryStyle: StylePropType,\n  accessoryStyle: StylePropType,\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    borderTopWidth: StyleSheet.hairlineWidth,\n    borderTopColor: Color.defaultColor,\n    backgroundColor: Color.white,\n  },\n  primary: {\n    flexDirection: 'row',\n    alignItems: 'flex-end',\n  },\n  accessory: {\n    height: 44,\n  },\n})\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}