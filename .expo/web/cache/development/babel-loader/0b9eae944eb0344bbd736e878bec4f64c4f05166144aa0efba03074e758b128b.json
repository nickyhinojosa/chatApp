{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useLayoutEffect, useCallback } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { GiftedChat } from 'react-native-gifted-chat';\nimport { collection, addDoc, orderBy, query, onSnapshot } from 'firebase/firestore';\nimport { signOut } from 'firebase/auth';\nimport { auth, database } from \"../config/firebase\";\nimport { useNavigation } from '@react-navigation/native';\nimport { AntDesign } from '@expo/vector-icons';\nimport colors from \"../colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Chat() {\n  var _auth$currentUser;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    messages = _useState2[0],\n    setMessages = _useState2[1];\n  var navigation = useNavigation();\n  var onSignOut = function onSignOut() {\n    signOut(auth).catch(function (error) {\n      return console.log('Error logging out: ', error);\n    });\n  };\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerRight: function headerRight() {\n        return _jsx(TouchableOpacity, {\n          style: {\n            marginRight: 10\n          },\n          onPress: onSignOut,\n          children: _jsx(AntDesign, {\n            name: \"logout\",\n            size: 24,\n            color: colors.gray,\n            style: {\n              marginRight: 10\n            }\n          })\n        });\n      }\n    });\n  }, [navigation]);\n  useLayoutEffect(function () {\n    var collectionRef = collection(database, 'chats');\n    var q = query(collectionRef, orderBy('createdAt', 'desc'));\n    var unsubscribe = onSnapshot(q, function (querySnapshot) {\n      console.log('querySnapshot unsusbscribe');\n      setMessages(querySnapshot.docs.map(function (doc) {\n        return {\n          _id: doc.data()._id,\n          createdAt: doc.data().createdAt.toDate(),\n          text: doc.data().text,\n          user: doc.data().user\n        };\n      }));\n    });\n    return unsubscribe;\n  }, []);\n  var _onSend = useCallback(function () {\n    var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    setMessages(function (previousMessages) {\n      return GiftedChat.append(previousMessages, messages);\n    });\n    var _messages$ = messages[0],\n      _id = _messages$._id,\n      createdAt = _messages$.createdAt,\n      text = _messages$.text,\n      user = _messages$.user;\n    addDoc(collection(database, 'chats'), {\n      _id: _id,\n      createdAt: createdAt,\n      text: text,\n      user: user\n    });\n  }, []);\n  return _jsx(GiftedChat, {\n    messages: messages,\n    showAvatarForEveryMessage: false,\n    showUserAvatar: false,\n    onSend: function onSend(messages) {\n      return _onSend(messages);\n    },\n    messagesContainerStyle: {\n      backgroundColor: '#fff'\n    },\n    textInputStyle: {\n      backgroundColor: '#fff',\n      borderRadius: 20\n    },\n    user: {\n      _id: auth == null ? void 0 : (_auth$currentUser = auth.currentUser) == null ? void 0 : _auth$currentUser.email,\n      avatar: 'https://i.pravatar.cc/300'\n    }\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","useLayoutEffect","useCallback","TouchableOpacity","Text","GiftedChat","collection","addDoc","orderBy","query","onSnapshot","signOut","auth","database","useNavigation","AntDesign","colors","jsx","_jsx","Chat","_auth$currentUser","_useState","_useState2","_slicedToArray","messages","setMessages","navigation","onSignOut","catch","error","console","log","setOptions","headerRight","style","marginRight","onPress","children","name","size","color","gray","collectionRef","q","unsubscribe","querySnapshot","docs","map","doc","_id","data","createdAt","toDate","text","user","onSend","arguments","length","undefined","previousMessages","append","_messages$","showAvatarForEveryMessage","showUserAvatar","messagesContainerStyle","backgroundColor","textInputStyle","borderRadius","currentUser","email","avatar"],"sources":["C:/Users/nicky/Desktop/Aplicaciones MÃ³viles I/ChatApp/screens/Chat.js"],"sourcesContent":["import React, {\r\n    useState,\r\n    useEffect,\r\n    useLayoutEffect,\r\n    useCallback\r\n  } from 'react';\r\n  import { TouchableOpacity, Text } from 'react-native';\r\n  import { GiftedChat } from 'react-native-gifted-chat';\r\n  import {\r\n    collection,\r\n    addDoc,\r\n    orderBy,\r\n    query,\r\n    onSnapshot\r\n  } from 'firebase/firestore';\r\n  import { signOut } from 'firebase/auth';\r\n  import { auth, database } from '../config/firebase';\r\n  import { useNavigation } from '@react-navigation/native';\r\n  import { AntDesign } from '@expo/vector-icons';\r\n  import colors from '../colors';\r\n\r\n\r\n  export default function Chat() {\r\n\r\n    const [messages, setMessages] = useState([]);\r\n    const navigation = useNavigation();\r\n\r\n  const onSignOut = () => {\r\n      signOut(auth).catch(error => console.log('Error logging out: ', error));\r\n    };\r\n\r\n    useLayoutEffect(() => {\r\n        navigation.setOptions({\r\n          headerRight: () => (\r\n            <TouchableOpacity\r\n              style={{\r\n                marginRight: 10\r\n              }}\r\n              onPress={onSignOut}\r\n            >\r\n              <AntDesign name=\"logout\" size={24} color={colors.gray} style={{marginRight: 10}}/>\r\n            </TouchableOpacity>\r\n          )\r\n        });\r\n      }, [navigation]);\r\n\r\n    useLayoutEffect(() => {\r\n\r\n        const collectionRef = collection(database, 'chats');\r\n        const q = query(collectionRef, orderBy('createdAt', 'desc'));\r\n\r\n    const unsubscribe = onSnapshot(q, querySnapshot => {\r\n        console.log('querySnapshot unsusbscribe');\r\n          setMessages(\r\n            querySnapshot.docs.map(doc => ({\r\n              _id: doc.data()._id,\r\n              createdAt: doc.data().createdAt.toDate(),\r\n              text: doc.data().text,\r\n              user: doc.data().user\r\n            }))\r\n          );\r\n        });\r\n    return unsubscribe;\r\n      }, []);\r\n\r\n    const onSend = useCallback((messages = []) => {\r\n        setMessages(previousMessages =>\r\n          GiftedChat.append(previousMessages, messages)\r\n        );\r\n        // setMessages([...messages, ...messages]);\r\n        const { _id, createdAt, text, user } = messages[0];    \r\n        addDoc(collection(database, 'chats'), {\r\n          _id,\r\n          createdAt,\r\n          text,\r\n          user\r\n        });\r\n      }, []);\r\n\r\n      return (\r\n        // <>\r\n        //   {messages.map(message => (\r\n        //     <Text key={message._id}>{message.text}</Text>\r\n        //   ))}\r\n        // </>\r\n        <GiftedChat\r\n          messages={messages}\r\n          showAvatarForEveryMessage={false}\r\n          showUserAvatar={false}\r\n          onSend={messages => onSend(messages)}\r\n          messagesContainerStyle={{\r\n            backgroundColor: '#fff'\r\n          }}\r\n          textInputStyle={{\r\n            backgroundColor: '#fff',\r\n            borderRadius: 20,\r\n          }}\r\n          user={{\r\n            _id: auth?.currentUser?.email,\r\n            avatar: 'https://i.pravatar.cc/300'\r\n          }}\r\n        />\r\n      );\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}