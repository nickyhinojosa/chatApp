{"ast":null,"code":"import { useLayoutEffect, useRef } from 'react';\nexport function useUpdateLayoutEffect(effect) {\n  var dependencies = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var isInitialMount = useRef(true);\n  useLayoutEffect(function () {\n    if (isInitialMount.current) isInitialMount.current = false;else effect();\n  }, dependencies);\n}","map":{"version":3,"names":["useLayoutEffect","useRef","useUpdateLayoutEffect","effect","dependencies","arguments","length","undefined","isInitialMount","current"],"sources":["C:\\Users\\nicky\\Desktop\\Aplicaciones MÃ³viles I\\ChatApp\\node_modules\\react-native-gifted-chat\\src\\hooks\\useUpdateLayoutEffect.ts"],"sourcesContent":["import { DependencyList, useLayoutEffect, useRef } from 'react'\n\n/**\n * A custom useEffect hook that only triggers on updates, not on initial mount\n * Idea stolen from: https://stackoverflow.com/a/55075818/1526448\n * @param {()=>void} effect the function to call\n * @param {DependencyList} dependencies the state(s) that fires the update\n */\nexport function useUpdateLayoutEffect (\n  effect: () => void,\n  dependencies: DependencyList = []\n) {\n  const isInitialMount = useRef(true)\n\n  useLayoutEffect(() => {\n    if (isInitialMount.current)\n      isInitialMount.current = false\n    else\n      effect()\n  }, dependencies)\n}\n"],"mappings":"AAAA,SAAyBA,eAAe,EAAEC,MAAM,QAAQ,OAAO;AAQ/D,OAAM,SAAUC,qBAAqBA,CACnCC,MAAkB,EACe;EAAA,IAAjCC,YAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAA+B,EAAE;EAEjC,IAAMG,cAAc,GAAGP,MAAM,CAAC,IAAI,CAAC;EAEnCD,eAAe,CAAC,YAAK;IACnB,IAAIQ,cAAc,CAACC,OAAO,EACxBD,cAAc,CAACC,OAAO,GAAG,KAAK,MAE9BN,MAAM,EAAE;EACZ,CAAC,EAAEC,YAAY,CAAC;AAClB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}