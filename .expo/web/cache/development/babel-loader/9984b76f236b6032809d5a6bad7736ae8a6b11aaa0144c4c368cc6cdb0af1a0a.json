{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport PropTypes from 'prop-types';\nimport React, { useState, useMemo } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useCallbackOne } from 'use-memo-one';\nimport Color from \"./Color\";\nimport { StylePropType } from \"./utils\";\nimport { warning } from \"./logging\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    maxWidth: 300\n  },\n  quickReply: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 1,\n    maxWidth: 200,\n    paddingVertical: 7,\n    paddingHorizontal: 12,\n    minHeight: 50,\n    borderRadius: 13,\n    margin: 3\n  },\n  quickReplyText: {\n    overflow: 'visible'\n  },\n  sendLink: {\n    borderWidth: 0\n  },\n  sendLinkText: {\n    color: Color.defaultBlue,\n    fontWeight: '600',\n    fontSize: 17\n  }\n});\nvar sameReply = function sameReply(currentReply) {\n  return function (reply) {\n    return currentReply.value === reply.value;\n  };\n};\nvar diffReply = function diffReply(currentReply) {\n  return function (reply) {\n    return currentReply.value !== reply.value;\n  };\n};\nexport function QuickReplies(_ref) {\n  var currentMessage = _ref.currentMessage,\n    nextMessage = _ref.nextMessage,\n    _ref$color = _ref.color,\n    color = _ref$color === void 0 ? Color.peterRiver : _ref$color,\n    quickReplyStyle = _ref.quickReplyStyle,\n    quickReplyTextStyle = _ref.quickReplyTextStyle,\n    quickReplyContainerStyle = _ref.quickReplyContainerStyle,\n    onQuickReply = _ref.onQuickReply,\n    _ref$sendText = _ref.sendText,\n    sendText = _ref$sendText === void 0 ? 'Send' : _ref$sendText,\n    renderQuickReplySend = _ref.renderQuickReplySend;\n  var type = currentMessage.quickReplies.type;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    replies = _useState2[0],\n    setReplies = _useState2[1];\n  var shouldComponentDisplay = useMemo(function () {\n    var hasReplies = !!currentMessage && !!currentMessage.quickReplies;\n    var hasNext = !!nextMessage && !!nextMessage._id;\n    var keepIt = currentMessage.quickReplies.keepIt;\n    if (hasReplies && !hasNext) return true;\n    if (hasReplies && hasNext && keepIt) return true;\n    return false;\n  }, [currentMessage, nextMessage]);\n  var handlePress = useCallbackOne(function (reply) {\n    return function () {\n      if (currentMessage) {\n        var _type = currentMessage.quickReplies.type;\n        switch (_type) {\n          case 'radio':\n            {\n              handleSend([reply])();\n              return;\n            }\n          case 'checkbox':\n            {\n              if (replies.find(sameReply(reply))) setReplies(replies.filter(diffReply(reply)));else setReplies([].concat(_toConsumableArray(replies), [reply]));\n              return;\n            }\n          default:\n            {\n              warning(\"onQuickReply unknown type: \" + _type);\n            }\n        }\n      }\n    };\n  }, [replies, currentMessage]);\n  var handleSend = function handleSend(repliesData) {\n    return function () {\n      onQuickReply == null ? void 0 : onQuickReply(repliesData.map(function (reply) {\n        return _objectSpread(_objectSpread({}, reply), {}, {\n          messageId: currentMessage._id\n        });\n      }));\n    };\n  };\n  if (!shouldComponentDisplay) return null;\n  return _jsxs(View, {\n    style: [styles.container, quickReplyContainerStyle],\n    children: [currentMessage.quickReplies.values.map(function (reply, index) {\n      var selected = type === 'checkbox' && replies.find(sameReply(reply));\n      return _jsx(TouchableOpacity, {\n        onPress: handlePress(reply),\n        style: [styles.quickReply, quickReplyStyle, {\n          borderColor: color\n        }, selected && {\n          backgroundColor: color\n        }],\n        children: _jsx(Text, {\n          numberOfLines: 10,\n          ellipsizeMode: \"tail\",\n          style: [styles.quickReplyText, {\n            color: selected ? Color.white : color\n          }, quickReplyTextStyle],\n          children: reply.title\n        })\n      }, reply.value + \"-\" + index);\n    }), replies.length > 0 && _jsx(TouchableOpacity, {\n      style: [styles.quickReply, styles.sendLink],\n      onPress: handleSend(replies),\n      children: (renderQuickReplySend == null ? void 0 : renderQuickReplySend()) || _jsx(Text, {\n        style: styles.sendLinkText,\n        children: sendText\n      })\n    })]\n  });\n}\nQuickReplies.propTypes = {\n  currentMessage: PropTypes.object.isRequired,\n  onQuickReply: PropTypes.func,\n  color: PropTypes.string,\n  sendText: PropTypes.string,\n  renderQuickReplySend: PropTypes.func,\n  quickReplyStyle: StylePropType\n};","map":{"version":3,"names":["PropTypes","React","useState","useMemo","Text","StyleSheet","View","TouchableOpacity","useCallbackOne","Color","StylePropType","warning","jsx","_jsx","jsxs","_jsxs","styles","create","container","flexDirection","flexWrap","maxWidth","quickReply","justifyContent","alignItems","borderWidth","paddingVertical","paddingHorizontal","minHeight","borderRadius","margin","quickReplyText","overflow","sendLink","sendLinkText","color","defaultBlue","fontWeight","fontSize","sameReply","currentReply","reply","value","diffReply","QuickReplies","_ref","currentMessage","nextMessage","_ref$color","peterRiver","quickReplyStyle","quickReplyTextStyle","quickReplyContainerStyle","onQuickReply","_ref$sendText","sendText","renderQuickReplySend","type","quickReplies","_useState","_useState2","_slicedToArray","replies","setReplies","shouldComponentDisplay","hasReplies","hasNext","_id","keepIt","handlePress","handleSend","find","filter","concat","_toConsumableArray","repliesData","map","_objectSpread","messageId","style","children","values","index","selected","onPress","borderColor","backgroundColor","numberOfLines","ellipsizeMode","white","title","length","propTypes","object","isRequired","func","string"],"sources":["C:\\Users\\nicky\\Desktop\\Aplicaciones MÃ³viles I\\ChatApp\\node_modules\\react-native-gifted-chat\\src\\QuickReplies.tsx"],"sourcesContent":["import PropTypes from 'prop-types'\nimport React, { useState, useMemo } from 'react'\nimport {\n  Text,\n  StyleSheet,\n  View,\n  TouchableOpacity,\n  StyleProp,\n  ViewStyle,\n  TextStyle,\n} from 'react-native'\nimport { useCallbackOne } from 'use-memo-one'\nimport { IMessage, Reply } from './Models'\nimport Color from './Color'\nimport { StylePropType } from './utils'\nimport { warning } from './logging'\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    maxWidth: 300,\n  },\n  quickReply: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 1,\n    maxWidth: 200,\n    paddingVertical: 7,\n    paddingHorizontal: 12,\n    minHeight: 50,\n    borderRadius: 13,\n    margin: 3,\n  },\n  quickReplyText: {\n    overflow: 'visible',\n  },\n  sendLink: {\n    borderWidth: 0,\n  },\n  sendLinkText: {\n    color: Color.defaultBlue,\n    fontWeight: '600',\n    fontSize: 17,\n  },\n})\n\nexport interface QuickRepliesProps<TMessage extends IMessage = IMessage> {\n  nextMessage?: TMessage\n  currentMessage: TMessage\n  color?: string\n  sendText?: string\n  quickReplyStyle?: StyleProp<ViewStyle>\n  quickReplyTextStyle?: StyleProp<TextStyle>\n  quickReplyContainerStyle?: StyleProp<ViewStyle>\n  onQuickReply?(reply: Reply[]): void\n  renderQuickReplySend?(): React.ReactNode\n}\n\nconst sameReply = (currentReply: Reply) => (reply: Reply) =>\n  currentReply.value === reply.value\n\nconst diffReply = (currentReply: Reply) => (reply: Reply) =>\n  currentReply.value !== reply.value\n\nexport function QuickReplies ({\n  currentMessage,\n  nextMessage,\n  color = Color.peterRiver,\n  quickReplyStyle,\n  quickReplyTextStyle,\n  quickReplyContainerStyle,\n  onQuickReply,\n  sendText = 'Send',\n  renderQuickReplySend,\n}: QuickRepliesProps<IMessage>) {\n  const { type } = currentMessage!.quickReplies!\n  const [replies, setReplies] = useState<Reply[]>([])\n\n  const shouldComponentDisplay = useMemo(() => {\n    const hasReplies = !!currentMessage && !!currentMessage!.quickReplies\n    const hasNext = !!nextMessage && !!nextMessage!._id\n    const keepIt = currentMessage!.quickReplies!.keepIt\n\n    if (hasReplies && !hasNext)\n      return true\n\n    if (hasReplies && hasNext && keepIt)\n      return true\n\n    return false\n  }, [currentMessage, nextMessage])\n\n  const handlePress = useCallbackOne(\n    (reply: Reply) => () => {\n      if (currentMessage) {\n        const { type } = currentMessage.quickReplies!\n        switch (type) {\n          case 'radio': {\n            handleSend([reply])()\n            return\n          }\n          case 'checkbox': {\n            if (replies.find(sameReply(reply)))\n              setReplies(replies.filter(diffReply(reply)))\n            else\n              setReplies([...replies, reply])\n\n            return\n          }\n          default: {\n            warning(`onQuickReply unknown type: ${type}`)\n          }\n        }\n      }\n    },\n    [replies, currentMessage]\n  )\n\n  const handleSend = (repliesData: Reply[]) => () => {\n    onQuickReply?.(\n      repliesData.map((reply: Reply) => ({\n        ...reply,\n        messageId: currentMessage!._id,\n      }))\n    )\n  }\n\n  if (!shouldComponentDisplay)\n    return null\n\n  return (\n    <View style={[styles.container, quickReplyContainerStyle]}>\n      {currentMessage!.quickReplies!.values.map(\n        (reply: Reply, index: number) => {\n          const selected =\n            type === 'checkbox' && replies.find(sameReply(reply))\n\n          return (\n            <TouchableOpacity\n              onPress={handlePress(reply)}\n              style={[\n                styles.quickReply,\n                quickReplyStyle,\n                { borderColor: color },\n                selected && { backgroundColor: color },\n              ]}\n              key={`${reply.value}-${index}`}\n            >\n              <Text\n                numberOfLines={10}\n                ellipsizeMode='tail'\n                style={[\n                  styles.quickReplyText,\n                  { color: selected ? Color.white : color },\n                  quickReplyTextStyle,\n                ]}\n              >\n                {reply.title}\n              </Text>\n            </TouchableOpacity>\n          )\n        }\n      )}\n      {replies.length > 0 && (\n        <TouchableOpacity\n          style={[styles.quickReply, styles.sendLink]}\n          onPress={handleSend(replies)}\n        >\n          {renderQuickReplySend?.() || (\n            <Text style={styles.sendLinkText}>{sendText}</Text>\n          )}\n        </TouchableOpacity>\n      )}\n    </View>\n  )\n}\n\nQuickReplies.propTypes = {\n  currentMessage: PropTypes.object.isRequired,\n  onQuickReply: PropTypes.func,\n  color: PropTypes.string,\n  sendText: PropTypes.string,\n  renderQuickReplySend: PropTypes.func,\n  quickReplyStyle: StylePropType,\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}