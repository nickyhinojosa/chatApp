{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport PropTypes from 'prop-types';\nimport React, { useCallback, useRef } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { MIN_COMPOSER_HEIGHT, DEFAULT_PLACEHOLDER } from \"./Constant\";\nimport Color from \"./Color\";\nimport { StylePropType } from \"./utils\";\nimport { useCallbackOne } from 'use-memo-one';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function Composer(_ref) {\n  var _ref$composerHeight = _ref.composerHeight,\n    composerHeight = _ref$composerHeight === void 0 ? MIN_COMPOSER_HEIGHT : _ref$composerHeight,\n    _ref$disableComposer = _ref.disableComposer,\n    disableComposer = _ref$disableComposer === void 0 ? false : _ref$disableComposer,\n    _ref$keyboardAppearan = _ref.keyboardAppearance,\n    keyboardAppearance = _ref$keyboardAppearan === void 0 ? 'default' : _ref$keyboardAppearan,\n    _ref$multiline = _ref.multiline,\n    multiline = _ref$multiline === void 0 ? true : _ref$multiline,\n    onInputSizeChanged = _ref.onInputSizeChanged,\n    onTextChanged = _ref.onTextChanged,\n    _ref$placeholder = _ref.placeholder,\n    placeholder = _ref$placeholder === void 0 ? DEFAULT_PLACEHOLDER : _ref$placeholder,\n    _ref$placeholderTextC = _ref.placeholderTextColor,\n    placeholderTextColor = _ref$placeholderTextC === void 0 ? Color.defaultColor : _ref$placeholderTextC,\n    _ref$text = _ref.text,\n    text = _ref$text === void 0 ? '' : _ref$text,\n    _ref$textInputAutoFoc = _ref.textInputAutoFocus,\n    textInputAutoFocus = _ref$textInputAutoFoc === void 0 ? false : _ref$textInputAutoFoc,\n    textInputProps = _ref.textInputProps,\n    textInputStyle = _ref.textInputStyle;\n  var dimensionsRef = useRef();\n  var determineInputSizeChange = useCallbackOne(function (dimensions) {\n    if (!dimensions) return;\n    if (!dimensionsRef.current || dimensionsRef.current && (dimensionsRef.current.width !== dimensions.width || dimensionsRef.current.height !== dimensions.height)) {\n      dimensionsRef.current = dimensions;\n      onInputSizeChanged == null ? void 0 : onInputSizeChanged(dimensions);\n    }\n  }, [onInputSizeChanged]);\n  var handleContentSizeChange = useCallback(function (_ref2) {\n    var contentSize = _ref2.nativeEvent.contentSize;\n    return determineInputSizeChange(contentSize);\n  }, [determineInputSizeChange]);\n  return _jsx(TextInput, _objectSpread({\n    testID: placeholder,\n    accessible: true,\n    accessibilityLabel: placeholder,\n    placeholder: placeholder,\n    placeholderTextColor: placeholderTextColor,\n    multiline: multiline,\n    editable: !disableComposer,\n    onContentSizeChange: handleContentSizeChange,\n    onChangeText: onTextChanged,\n    style: [styles.textInput, textInputStyle, _objectSpread({\n      height: composerHeight\n    }, Platform.select({\n      web: {\n        outlineWidth: 0,\n        outlineColor: 'transparent',\n        outlineOffset: 0\n      }\n    }))],\n    autoFocus: textInputAutoFocus,\n    value: text,\n    enablesReturnKeyAutomatically: true,\n    underlineColorAndroid: \"transparent\",\n    keyboardAppearance: keyboardAppearance\n  }, textInputProps));\n}\nComposer.propTypes = {\n  composerHeight: PropTypes.number,\n  text: PropTypes.string,\n  placeholder: PropTypes.string,\n  placeholderTextColor: PropTypes.string,\n  textInputProps: PropTypes.object,\n  onTextChanged: PropTypes.func,\n  onInputSizeChanged: PropTypes.func,\n  multiline: PropTypes.bool,\n  disableComposer: PropTypes.bool,\n  textInputStyle: StylePropType,\n  textInputAutoFocus: PropTypes.bool,\n  keyboardAppearance: PropTypes.string\n};\nvar styles = StyleSheet.create({\n  textInput: _objectSpread(_objectSpread({\n    flex: 1,\n    marginLeft: 10,\n    fontSize: 16,\n    lineHeight: 22\n  }, Platform.select({\n    web: {\n      paddingTop: 6,\n      paddingLeft: 4\n    }\n  })), {}, {\n    marginTop: Platform.select({\n      ios: 6,\n      android: 0,\n      web: 6\n    }),\n    marginBottom: Platform.select({\n      ios: 5,\n      android: 3,\n      web: 4\n    })\n  })\n});","map":{"version":3,"names":["PropTypes","React","useCallback","useRef","Platform","StyleSheet","TextInput","MIN_COMPOSER_HEIGHT","DEFAULT_PLACEHOLDER","Color","StylePropType","useCallbackOne","jsx","_jsx","Composer","_ref","_ref$composerHeight","composerHeight","_ref$disableComposer","disableComposer","_ref$keyboardAppearan","keyboardAppearance","_ref$multiline","multiline","onInputSizeChanged","onTextChanged","_ref$placeholder","placeholder","_ref$placeholderTextC","placeholderTextColor","defaultColor","_ref$text","text","_ref$textInputAutoFoc","textInputAutoFocus","textInputProps","textInputStyle","dimensionsRef","determineInputSizeChange","dimensions","current","width","height","handleContentSizeChange","_ref2","contentSize","nativeEvent","_objectSpread","testID","accessible","accessibilityLabel","editable","onContentSizeChange","onChangeText","style","styles","textInput","select","web","outlineWidth","outlineColor","outlineOffset","autoFocus","value","enablesReturnKeyAutomatically","underlineColorAndroid","propTypes","number","string","object","func","bool","create","flex","marginLeft","fontSize","lineHeight","paddingTop","paddingLeft","marginTop","ios","android","marginBottom"],"sources":["C:\\Users\\nicky\\Desktop\\Aplicaciones MÃ³viles I\\ChatApp\\node_modules\\react-native-gifted-chat\\src\\Composer.tsx"],"sourcesContent":["import PropTypes from 'prop-types'\nimport React, { useCallback, useRef } from 'react'\nimport {\n  Platform,\n  StyleSheet,\n  TextInput,\n  TextInputProps,\n  NativeSyntheticEvent,\n  TextInputContentSizeChangeEventData,\n} from 'react-native'\nimport { MIN_COMPOSER_HEIGHT, DEFAULT_PLACEHOLDER } from './Constant'\nimport Color from './Color'\nimport { StylePropType } from './utils'\nimport { useCallbackOne } from 'use-memo-one'\n\nexport interface ComposerProps {\n  composerHeight?: number\n  text?: string\n  placeholder?: string\n  placeholderTextColor?: string\n  textInputProps?: Partial<TextInputProps>\n  textInputStyle?: TextInputProps['style']\n  textInputAutoFocus?: boolean\n  keyboardAppearance?: TextInputProps['keyboardAppearance']\n  multiline?: boolean\n  disableComposer?: boolean\n  onTextChanged?(text: string): void\n  onInputSizeChanged?(layout: { width: number, height: number }): void\n}\n\nexport function Composer ({\n  composerHeight = MIN_COMPOSER_HEIGHT,\n  disableComposer = false,\n  keyboardAppearance = 'default',\n  multiline = true,\n  onInputSizeChanged,\n  onTextChanged,\n  placeholder = DEFAULT_PLACEHOLDER,\n  placeholderTextColor = Color.defaultColor,\n  text = '',\n  textInputAutoFocus = false,\n  textInputProps,\n  textInputStyle,\n}: ComposerProps): React.ReactElement {\n  const dimensionsRef = useRef<{ width: number, height: number }>()\n\n  const determineInputSizeChange = useCallbackOne(\n    (dimensions: { width: number, height: number }) => {\n      // Support earlier versions of React Native on Android.\n      if (!dimensions)\n        return\n\n      if (\n        !dimensionsRef.current ||\n        (dimensionsRef.current &&\n          (dimensionsRef.current.width !== dimensions.width ||\n            dimensionsRef.current.height !== dimensions.height))\n      ) {\n        dimensionsRef.current = dimensions\n        onInputSizeChanged?.(dimensions)\n      }\n    },\n    [onInputSizeChanged]\n  )\n\n  const handleContentSizeChange = useCallback(\n    ({\n      nativeEvent: { contentSize },\n    }: NativeSyntheticEvent<TextInputContentSizeChangeEventData>) =>\n      determineInputSizeChange(contentSize),\n    [determineInputSizeChange]\n  )\n\n  return (\n    <TextInput\n      testID={placeholder}\n      accessible\n      accessibilityLabel={placeholder}\n      placeholder={placeholder}\n      placeholderTextColor={placeholderTextColor}\n      multiline={multiline}\n      editable={!disableComposer}\n      onContentSizeChange={handleContentSizeChange}\n      onChangeText={onTextChanged}\n      style={[\n        styles.textInput,\n        textInputStyle,\n        {\n          height: composerHeight,\n          ...Platform.select({\n            web: {\n              outlineWidth: 0,\n              outlineColor: 'transparent',\n              outlineOffset: 0,\n            },\n          }),\n        },\n      ]}\n      autoFocus={textInputAutoFocus}\n      value={text}\n      enablesReturnKeyAutomatically\n      underlineColorAndroid='transparent'\n      keyboardAppearance={keyboardAppearance}\n      {...textInputProps}\n    />\n  )\n}\n\nComposer.propTypes = {\n  composerHeight: PropTypes.number,\n  text: PropTypes.string,\n  placeholder: PropTypes.string,\n  placeholderTextColor: PropTypes.string,\n  textInputProps: PropTypes.object,\n  onTextChanged: PropTypes.func,\n  onInputSizeChanged: PropTypes.func,\n  multiline: PropTypes.bool,\n  disableComposer: PropTypes.bool,\n  textInputStyle: StylePropType,\n  textInputAutoFocus: PropTypes.bool,\n  keyboardAppearance: PropTypes.string,\n}\n\nconst styles = StyleSheet.create({\n  textInput: {\n    flex: 1,\n    marginLeft: 10,\n    fontSize: 16,\n    lineHeight: 22,\n    ...Platform.select({\n      web: {\n        paddingTop: 6,\n        paddingLeft: 4,\n      },\n    }),\n    marginTop: Platform.select({\n      ios: 6,\n      android: 0,\n      web: 6,\n    }),\n    marginBottom: Platform.select({\n      ios: 5,\n      android: 3,\n      web: 4,\n    }),\n  },\n})\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}